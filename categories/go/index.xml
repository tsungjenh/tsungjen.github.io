<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on TsungJen.io</title>
    <link>https://tsungjenh.github.io/categories/go/</link>
    <description>Recent content in Go on TsungJen.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 05 Sep 2020 18:19:47 +0600</lastBuildDate>
    
	<atom:link href="https://tsungjenh.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Context Source Code review</title>
      <link>https://tsungjenh.github.io/blog/go_context/</link>
      <pubDate>Sat, 05 Sep 2020 18:19:47 +0600</pubDate>
      
      <guid>https://tsungjenh.github.io/blog/go_context/</guid>
      <description>Intro There are two classic methods in Go to handle concurrency.</description>
    </item>
    
    <item>
      <title>Garbage Collection in Go</title>
      <link>https://tsungjenh.github.io/blog/gc_go/</link>
      <pubDate>Sun, 23 Aug 2020 10:07:47 +0600</pubDate>
      
      <guid>https://tsungjenh.github.io/blog/gc_go/</guid>
      <description>Introduction A Garbage collector is a design of automatic heap memory management, it attempts to free up the allocations that are no long needed while keeping the allocations that are still in use.</description>
    </item>
    
    <item>
      <title>Understanding Go Scheduler</title>
      <link>https://tsungjenh.github.io/blog/go_scheduler/</link>
      <pubDate>Wed, 15 Jul 2020 02:12:05 +0600</pubDate>
      
      <guid>https://tsungjenh.github.io/blog/go_scheduler/</guid>
      <description>Intro One of the biggest feature for Go is the Go Scheduler.</description>
    </item>
    
    <item>
      <title>Go Map Source Code Review</title>
      <link>https://tsungjenh.github.io/blog/go_map/</link>
      <pubDate>Mon, 29 Jun 2020 22:44:32 +0800</pubDate>
      
      <guid>https://tsungjenh.github.io/blog/go_map/</guid>
      <description>1. Intro Map is an important data structure in Go.</description>
    </item>
    
    <item>
      <title>Go Channel Source Code Review</title>
      <link>https://tsungjenh.github.io/blog/channel_ds/</link>
      <pubDate>Wed, 29 Apr 2020 10:07:47 +0600</pubDate>
      
      <guid>https://tsungjenh.github.io/blog/channel_ds/</guid>
      <description>0. Intro With its concurrency properties, Go becomes one of the most popular languages in recent years.</description>
    </item>
    
  </channel>
</rss>